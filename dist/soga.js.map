{"version":3,"file":"soga.js","sources":["../src/function/createResponse.ts","../src/function/parseResponse.ts","../src/function/setRequestHeaders.ts","../src/fetch.ts","../src/AjaxUploader.ts","../src/FlashUploader.ts"],"sourcesContent":["import {\n  Response,\n} from '../type'\n\nexport default function (\n  xhr: XMLHttpRequest,\n  headers: Record<string, string>\n) {\n  function response(): Response {\n    return {\n      ok: xhr.status >= 200 && xhr.status < 300,\n      statusText: xhr.statusText || 'OK',\n      status: xhr.status || 200,\n      url: xhr.responseURL || headers['x-request-url'] || '',\n      headers: {\n        get(name: string) {\n          return headers[name.toLowerCase()]\n        },\n        has(name: string) {\n          return name.toLowerCase() in headers\n        }\n      },\n      body: xhr.response || xhr.responseText,\n      text() {\n        return xhr.responseText\n      },\n      json() {\n        return JSON.parse(xhr.responseText)\n      },\n      blob() {\n        return new Blob([xhr.response])\n      },\n      clone: response,\n    }\n  }\n  return response\n}","import createResponse from './createResponse'\n\nexport default function (xhr: XMLHttpRequest) {\n\n  const headers: Record<string, string> = {}\n\n  const rawHeaders = xhr.getAllResponseHeaders() || ''\n\n  rawHeaders.replace(\n    /^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,\n    function (match: string, key: string, value: string) {\n      headers[key.toLowerCase()] = value\n      return match\n    }\n  )\n\n  return createResponse(xhr, headers)\n\n}","export default function (xhr: XMLHttpRequest, headers?: HeadersInit) {\n  for (let key in headers) {\n    xhr.setRequestHeader(key, headers[key])\n  }\n}","import {\n  Response,\n  FetchOptions,\n} from './type'\n\nimport parseResponse from './function/parseResponse'\nimport setRequestHeaders from './function/setRequestHeaders'\n\nexport default function fetch(url: string, options: FetchOptions = {}): Promise<Response> {\n  return new Promise(function (resolve, reject) {\n\n    const xhr = new XMLHttpRequest()\n\n    xhr.open(options.method || 'get', url, true)\n\n    xhr.onload = function () {\n      const response = parseResponse(xhr)\n      resolve(response())\n    }\n\n    xhr.onerror = reject\n\n    /**\n     * The credentials indicates whether the user agent should send cookies\n     * from the other domain in the case of cross-origin requests.\n     *\n     * omit: Never send or receive cookies\n     *\n     * include: Always send user credentials (cookies, basic http auth, etc..), even for cross-origin calls\n     *\n     * same-origin: Send user credentials (cookies, basic http auth, etc..) if the URL is on the same origin as the calling script.\n     *              This is the default value.\n     */\n    if (options.credentials === 'include') {\n      xhr.withCredentials = true\n    }\n    else if (options.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    setRequestHeaders(xhr, options.headers)\n\n    xhr.send(options.body || null)\n\n  })\n}\n","import {\n  UploadOptions,\n  UploadChunkOptions,\n  UploadHooks,\n  ChunkInfo,\n} from './type'\n\nimport parseResponse from './function/parseResponse'\nimport setRequestHeaders from './function/setRequestHeaders'\n\nconst blobSlice = File.prototype.slice || File.prototype['webkitSlice'] || File.prototype['mozSlice']\n\nexport default class AjaxUploader {\n\n  xhr: XMLHttpRequest\n\n  file: File | Blob\n\n  fileSize: number\n\n  hooks: UploadHooks\n\n  chunkInfo?: ChunkInfo\n\n  public static support() {\n    const xhr = new XMLHttpRequest()\n    return 'upload' in xhr && 'onprogress' in xhr.upload\n  }\n\n  constructor(file: File | Blob, hooks: UploadHooks) {\n\n    const instance = this\n\n    instance.file = file\n    instance.hooks = hooks\n\n    // 碰到过传了几个分片之后，file.size 变成 0 的情况\n    // 因此先存一下最初的 fileSize\n    instance.fileSize = file.size || 0\n\n    const xhr = instance.xhr = new XMLHttpRequest()\n\n    xhr.onloadstart = function () {\n      if (hooks.onStart) {\n        hooks.onStart()\n      }\n    }\n    xhr.onloadend = function () {\n      if (hooks.onEnd) {\n        hooks.onEnd()\n      }\n    }\n    xhr.onload = function () {\n\n      const { fileSize, chunkInfo } = instance\n\n      if (chunkInfo) {\n        if (chunkInfo.uploaded < fileSize) {\n          chunkInfo.uploaded += chunkInfo.uploading\n\n          if (hooks.onChunkSuccess) {\n            hooks.onChunkSuccess({\n              chunkIndex: chunkInfo.options.chunkIndex\n            })\n          }\n\n          // 还有分片没上传完则继续上传下一个\n          if (chunkInfo.uploaded < fileSize) {\n            chunkInfo.options.chunkIndex++\n            instance.uploadChunk(chunkInfo.options)\n            return\n          }\n        }\n      }\n\n      if (hooks.onSuccess) {\n        const response = parseResponse(xhr)\n        hooks.onSuccess(response())\n      }\n\n    }\n    xhr.onerror = function () {\n      if (hooks.onError) {\n        hooks.onError()\n      }\n    }\n    xhr.onabort = function () {\n      if (hooks.onAbort) {\n        hooks.onAbort()\n      }\n    }\n    // 下载文件触发的是 xhr.onprogress\n    // 上传文件触发的是 xhr.upload.onprogress\n    xhr.upload.onprogress = function (event) {\n\n      const { fileSize, chunkInfo } = instance\n\n      let uploaded: number\n\n      if (chunkInfo) {\n        // 当前正在上传的分片 size\n        const chunkTotal = chunkInfo.uploading\n        // 不能比当前正在上传的 size 还大\n        const chunkUploaded = Math.min(chunkTotal, event.loaded)\n\n        if (hooks.onChunkProgress) {\n          hooks.onChunkProgress({\n            chunkIndex: chunkInfo.options.chunkIndex,\n            uploaded: chunkUploaded,\n            total: chunkTotal,\n            // 怕浏览器有 bug 导致 chunkTotal 为 0\n            percent: chunkTotal > 0 ? chunkUploaded / chunkTotal : 0\n          })\n        }\n\n        // 加上之前上传成功的分片 size\n        uploaded = chunkInfo.uploaded + chunkUploaded\n\n      }\n      else {\n        // 不能比文件 size 还大\n        uploaded = Math.min(fileSize, event.loaded)\n      }\n\n      if (hooks.onProgress) {\n        hooks.onProgress({\n          uploaded,\n          total: fileSize,\n          // 怕浏览器有 bug 导致 fileSize 为 0\n          percent: fileSize > 0 ? uploaded / fileSize : 0\n        })\n      }\n\n    }\n\n  }\n\n  /**\n   * 上传整个文件\n   */\n  upload(options: UploadOptions) {\n\n    const { xhr, file } = this\n\n    xhr.open('post', options.action, true)\n\n    if (options.credentials === 'include') {\n      xhr.withCredentials = true\n    }\n    else if (options.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    const formData = new FormData()\n\n    for (let key in options.data) {\n      formData.append(key, options.data[key])\n    }\n\n    formData.append(options.fileName, file)\n\n    setRequestHeaders(xhr, options.headers)\n\n    xhr.send(formData)\n\n  }\n\n  /**\n   * 上传文件分片\n   */\n  uploadChunk(options: UploadChunkOptions) {\n\n    let { xhr, file, fileSize, chunkInfo } = this\n\n    if (!chunkInfo) {\n      chunkInfo = this.chunkInfo = {\n        uploaded: 0,\n        uploading: 0,\n        options,\n      }\n    }\n    else if (chunkInfo.options !== options) {\n      chunkInfo.options = options\n    }\n\n    // 默认从第一个分片开始上传，断点续传可以传入指定的分片\n    const chunkIndex = options.chunkIndex || 0\n\n    // 默认一个分片为 4M\n    const chunkSize = options.chunkSize || (4 * 1024 * 1024)\n\n    const start = chunkSize * chunkIndex\n    const end = Math.min(fileSize, chunkSize * (chunkIndex + 1))\n\n    chunkInfo.uploading = end - start\n\n    xhr.open('post', options.action, true)\n\n    // xhr.setRequestHeader 必须在 open() 方法之后，send() 方法之前调用，否则会报错\n\n    // xhr.setRequestHeader 设置相同的请求头不会覆盖，而是追加，如 key: value1, value2\n    // 这里改成覆盖\n    const headers = {\n      Range: `bytes ${start}-${end}/${fileSize}`\n    }\n\n    for (let key in options.headers) {\n      headers[key] = options.headers[key]\n    }\n\n    setRequestHeaders(xhr, headers)\n\n    xhr.send(blobSlice.call(file, start, end))\n\n  }\n\n  /**\n   * 取消上传\n   */\n  abort() {\n    this.xhr.abort()\n  }\n\n  /**\n   * 销毁\n   */\n  destroy() {\n    this.abort()\n  }\n\n}","import {\n  UploadOptions,\n  UploadProgress,\n} from './type'\n\ninterface IndexedFile {\n  index: number\n  status: number\n  name: string\n  type: string\n  size: number\n}\n\ninterface FlashDebug {\n  text: string\n}\n\ninterface FlashFile {\n  file: IndexedFile\n}\n\ninterface FlashSuccess {\n  file: IndexedFile\n  responseText: string\n}\n\ninterface FlashError {\n  file: IndexedFile,\n  code: number,\n  detail: Object | void\n}\n\ninterface FlashProgress {\n  file: IndexedFile\n  uploaded: number\n  total: number\n}\n\ninterface FlashUploaderOptions {\n  // swf 文件所在地址\n  swfUrl: string\n  // 可上传的文件格式，如 'jpg,png'\n  accept?: string\n  // 是否支持多文件上传\n  multiple?: boolean\n  // 是否开启调试模式\n  debug?: boolean\n  // 放置 <object> 标签的占位元素\n  el: Element\n}\n\ninterface FlashUploaderHooks {\n  onReady?: () => void\n  onFileChange?: () => void\n  onStart?: (file: IndexedFile) => void\n  onEnd?: (file: IndexedFile) => void\n  onError?: (file: IndexedFile, code: number, detail: Object | void) => void\n  onAbort?: (file: IndexedFile) => void\n  onProgress?: (file: IndexedFile, progress: UploadProgress) => void\n  onSuccess?: (file: IndexedFile, responseText: string) => void\n}\n\nexport default class FlashUploader {\n\n  swf: Element\n\n  movieName: string\n\n  hooks: FlashUploaderHooks\n\n  debug: boolean\n\n  public static instances = {}\n\n  /**\n   * 文件状态 - 等待上传\n   */\n  public static STATUS_WAITING = 0\n\n  /**\n   * 文件状态 - 正在上传\n   */\n  public static STATUS_UPLOADING = 1\n\n  /**\n   * 文件状态 - 上传成功\n   */\n  public static STATUS_UPLOAD_SUCCESS = 2\n\n  /**\n   * 文件状态 - 上传失败\n   */\n  public static STATUS_UPLOAD_ERROR = 3\n\n  /**\n   * 文件状态 - 上传中止\n   */\n  public static STATUS_UPLOAD_ABORT = 4\n\n  /**\n   * 错误码 - 上传出现沙箱安全错误\n   */\n  public static ERROR_SECURITY = 0\n\n  /**\n   * 错误码 - 上传 IO 错误\n   */\n  public static ERROR_IO = 1\n\n  constructor(options: FlashUploaderOptions, hooks: FlashUploaderHooks = {}) {\n\n    const movieName = createMovieName()\n\n    const swf = createSWF(\n      movieName,\n      options.swfUrl,\n      createFlashVars(movieName, options.accept || '', options.multiple || false)\n    )\n\n    const { el } = options\n    if (el.parentNode) {\n      el.parentNode.replaceChild(swf, el)\n    }\n    else {\n      throw new Error('el.parentNode is not found.')\n    }\n\n    this.swf = swf\n    this.movieName = movieName\n    this.hooks = hooks\n    this.debug = !!options.debug\n\n    FlashUploader.instances[movieName] = this\n\n  }\n\n  /**\n   * 获得要上传的文件\n   */\n  getFiles(): IndexedFile[] {\n    return this.swf['getFiles']()\n  }\n\n  /**\n   * 上传\n   */\n  upload(index: number, options: UploadOptions) {\n    this.swf['upload'](index, options.action, options.fileName, options.data, options.headers)\n  }\n\n  /**\n   * 取消上传\n   */\n  abort(index: number) {\n    this.swf['abort'](index)\n  }\n\n  /**\n   * 启用鼠标点击打开文件选择窗口\n   */\n  enable() {\n    this.swf['enable']()\n  }\n\n  /**\n   * 禁用鼠标点击打开文件选择窗口\n   */\n  disable() {\n    this.swf['disable']()\n  }\n\n  /**\n   * 销毁对象\n   */\n  destroy() {\n    const files = this.getFiles()\n    for (let i = 0, len = files.length; i < len; i++) {\n      this.abort(files[i].index)\n    }\n    this.swf['destroy']()\n    FlashUploader.instances[this.movieName] = null\n    // 清除 IE 引用\n    window[this.movieName] = null\n  }\n\n  onReady() {\n    // swf 文件初始化成功\n    const { onReady } = this.hooks\n    if (onReady) {\n      onReady()\n    }\n  }\n\n  onFileChange() {\n    // 用户选择文件\n    const { onFileChange } = this.hooks\n    if (onFileChange) {\n      onFileChange()\n    }\n  }\n\n  onStart(data: FlashFile) {\n    const { onStart } = this.hooks\n    if (onStart) {\n      onStart(data.file)\n    }\n  }\n\n  onEnd(data: FlashFile) {\n    const { onEnd } = this.hooks\n    if (onEnd) {\n      onEnd(data.file)\n    }\n  }\n\n  onError(data: FlashError) {\n    const { onError } = this.hooks\n    if (onError) {\n      onError(data.file, data.code, data.detail)\n    }\n  }\n\n  onAbort(data: FlashFile) {\n    const { onAbort } = this.hooks\n    if (onAbort) {\n      onAbort(data.file)\n    }\n  }\n\n  onProgress(data: FlashProgress) {\n    const { onProgress } = this.hooks\n    if (onProgress) {\n      const { file, uploaded, total } = data\n      onProgress(\n        file,\n        {\n          uploaded,\n          total,\n          percent: total > 0 ? uploaded / total : 0\n        }\n      )\n    }\n  }\n\n  onSuccess(data: FlashSuccess) {\n    const { onSuccess } = this.hooks\n    if (onSuccess) {\n      onSuccess(data.file, data.responseText)\n    }\n  }\n\n  onDebug(data: FlashDebug) {\n    if (this.debug) {\n      console.log(data.text)\n    }\n  }\n\n}\n\n/**\n * 项目名称 AS 会用 projectName.instances[movieName] 找出当前实例\n */\nconst projectName = 'Soga_Flash_Uploader'\n\n/**\n * 暴露给全局的对象，这样 AS 才能调到\n */\nwindow[projectName] = FlashUploader\n\n/**\n * guid 初始值\n */\nlet guid = 0\n\n/**\n * 创建新的唯一的影片剪辑名称\n */\nfunction createMovieName() {\n  return projectName + (guid++)\n}\n\n/**\n * 创建 swf 元素\n *\n * 无需兼容 IE67 用现有方法即可\n *\n * 如果想兼容 IE67，有两种方法：\n *\n * 1. 把 wmode 改成 opaque\n * 2. 用 swfobject 或别的库重写此方法\n *\n * 这里不兼容 IE67 是因为要判断浏览器实在太蛋疼了。。。\n */\nfunction createSWF(id: string, swfUrl: string, flashVars: string) {\n\n  const div = document.createElement('div')\n\n  // 不加 ID 在 IE 下没法运行\n  div.innerHTML = '<object id=\"' + id + '\" class=\"' + projectName.toLowerCase()\n    + '\" type=\"application/x-shockwave-flash\" data=\"' + swfUrl + '\">'\n    + '<param name=\"movie\" value=\"' + swfUrl + '\" />'\n    + '<param name=\"allowscriptaccess\" value=\"always\" />'\n    + '<param name=\"wmode\" value=\"transparent\" />'\n    + '<param name=\"flashvars\" value=\"' + flashVars + '\" />'\n    + '</object>'\n\n  return div.children[0]\n\n}\n\n/**\n * 拼装给 swf 用的参数\n */\nfunction createFlashVars(movieName: string, accept: string, multiple: boolean) {\n\n  const result = [\n    'projectName=' + projectName,\n    'movieName=' + movieName,\n    'accept=' + encodeURIComponent(accept),\n    'multiple=' + (multiple ? 'true' : 'false')\n  ]\n\n  return result.join('&amp;')\n\n}\n"],"names":["const","let"],"mappings":"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"}