{"version":3,"file":"soga.js","sources":["../src/createResponse.ts","../src/parseResponse.ts","../src/fetch.ts","../src/AjaxUploader.ts"],"sourcesContent":["import * as type from './type'\n\nexport default function (\n  xhr: XMLHttpRequest,\n  keys: string[],\n  values: string[],\n  entries: string[][]\n) {\n  function response(): type.Response {\n    return {\n      // 200-299\n      ok: (xhr.status / 100 | 0) == 2,\n      statusText: xhr.statusText,\n      status: xhr.status,\n      url: xhr.responseURL,\n      headers: {\n        keys() {\n          return keys\n        },\n        values() {\n          return values\n        },\n        entries() {\n          return entries\n        }\n      },\n      text() {\n        return xhr.responseText\n      },\n      json() {\n        return JSON.parse(xhr.responseText)\n      },\n      blob() {\n        return new Blob([xhr.response])\n      },\n      clone: response,\n    }\n  }\n  return response\n}","import createResponse from './createResponse'\n\nexport default function (xhr: XMLHttpRequest) {\n\n  const keys: string[] = []\n  const values: string[] = []\n  const entries: string[][] = []\n\n  xhr\n    .getAllResponseHeaders()\n    .replace(\n      /^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,\n      function (match: string, key: string, value: string) {\n        keys.push(key = key.toLowerCase())\n        values.push(value)\n        entries.push([key, value])\n        return match\n      }\n    )\n\n  return createResponse(xhr, keys, values, entries)\n\n}","import parseResponse from './parseResponse'\n\nexport default function (url: string, options: RequestInit = {}) {\n  return new Promise(function (resolve, reject) {\n\n    const xhr = new XMLHttpRequest()\n\n    xhr.open(options.method || 'get', url, true)\n\n    xhr.onload = function () {\n      const response = parseResponse(xhr)\n      resolve(response())\n    }\n\n    xhr.onerror = reject\n    xhr.withCredentials = options.credentials === 'include'\n\n    for (let key in options.headers) {\n      xhr.setRequestHeader(key, options.headers[key])\n    }\n\n    xhr.send(options.body || null)\n\n  })\n}","import * as type from './type'\nimport parseResponse from './parseResponse'\n\nexport default class AjaxUploader implements type.Uploader {\n\n  xhr: XMLHttpRequest\n\n  file: File\n  hooks: type.UploadHooks\n\n  constructor(file: File, hooks: type.UploadHooks) {\n\n    this.file = file\n    this.hooks = hooks\n\n    const xhr = this.xhr = new XMLHttpRequest()\n\n    xhr.onloadstart = function () {\n      if (hooks.onUploadStart) {\n        hooks.onUploadStart()\n      }\n    }\n    xhr.onloadend = function () {\n      if (hooks.onUploadEnd) {\n        hooks.onUploadEnd()\n      }\n    }\n    xhr.onload = function () {\n      if (hooks.onUploadSuccess) {\n        const response = parseResponse(xhr)\n        hooks.onUploadSuccess(response())\n      }\n    }\n    xhr.onerror = function () {\n      if (hooks.onUploadFailure) {\n        hooks.onUploadFailure()\n      }\n    }\n    xhr.onabort = function () {\n      if (hooks.onUploadCancel) {\n        hooks.onUploadCancel()\n      }\n    }\n    xhr.onprogress = function (event) {\n      if (hooks.onUploadProgress) {\n        const total = file.size\n        const uploaded = Math.min(total, event.loaded)\n        const percent = total > 0 ? uploaded / total : 0\n        hooks.onUploadProgress({\n          uploaded,\n          total,\n          percent\n        })\n      }\n    }\n\n  }\n\n  upload(options: type.UploadOptions) {\n\n    const { xhr, file } = this\n\n    for (let key in options.header) {\n      xhr.setRequestHeader(name, options.header[key])\n    }\n\n    const formData = new FormData()\n\n    for (let key in options.data) {\n      formData.append(key, options.data[key])\n    }\n\n    formData.append(options.fileName, file)\n\n    xhr.open('post', options.action, true)\n\n    xhr.send(formData)\n\n  }\n\n}"],"names":["const","let","key"],"mappings":";;;;;;;;;;;;2BAGE,GAAmB,EACnB,IAAc,EACd,MAAgB,EAChB,OAAmB;MAEnB,SAAS,QAAQ;UACf,OAAO;;cAEL,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;cAC/B,UAAU,EAAE,GAAG,CAAC,UAAU;cAC1B,MAAM,EAAE,GAAG,CAAC,MAAM;cAClB,GAAG,EAAE,GAAG,CAAC,WAAW;cACpB,OAAO,EAAE;kBACP,qBAAI;sBACF,OAAO,IAAI,CAAA;mBACZ;kBACD,yBAAM;sBACJ,OAAO,MAAM,CAAA;mBACd;kBACD,2BAAO;sBACL,OAAO,OAAO,CAAA;mBACf;eACF;cACD,mBAAI;kBACF,OAAO,GAAG,CAAC,YAAY,CAAA;eACxB;cACD,mBAAI;kBACF,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;eACpC;cACD,mBAAI;kBACF,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAA;eAChC;cACD,KAAK,EAAE,QAAQ;WAChB,CAAA;OACF;MACD,OAAO,QAAQ,CAAA;GAChB;;0BCrCwB,GAAmB;MAE1CA,IAAM,IAAI,GAAa,EAAE,CAAA;MACzBA,IAAM,MAAM,GAAa,EAAE,CAAA;MAC3BA,IAAM,OAAO,GAAe,EAAE,CAAA;MAE9B,GAAG;WACA,qBAAqB,EAAE;WACvB,OAAO,CACN,8BAA8B,EAC9B,UAAU,KAAa,EAAE,GAAW,EAAE,KAAa;UACjD,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC,CAAA;UAClC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;UAClB,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAA;UAC1B,OAAO,KAAK,CAAA;OACb,CACF,CAAA;MAEH,OAAO,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;GAElD;;kBCpBwB,GAAW,EAAE,OAAyB;0CAAF;;MAC3D,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM;UAE1CA,IAAM,GAAG,GAAG,IAAI,cAAc,EAAE,CAAA;UAEhC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAA;UAE5C,GAAG,CAAC,MAAM,GAAG;cACXA,IAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAA;cACnC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAA;WACpB,CAAA;UAED,GAAG,CAAC,OAAO,GAAG,MAAM,CAAA;UACpB,GAAG,CAAC,eAAe,GAAG,OAAO,CAAC,WAAW,KAAK,SAAS,CAAA;UAEvD,KAAKC,IAAI,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE;cAC/B,GAAG,CAAC,gBAAgB,CAAC,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;WAChD;UAED,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,CAAA;OAE/B,CAAC,CAAA;GACH;;ECrBD,IAAqB,YAAY,GAO/B,sBAAY,IAAU,EAAE,KAAuB;MAE7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;MAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;UAEZ,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,cAAc,EAAE,CAAA;MAE3C,GAAG,CAAC,WAAW,GAAG;UAChB,IAAI,KAAK,CAAC,aAAa,EAAE;cACvB,KAAK,CAAC,aAAa,EAAE,CAAA;WACtB;OACF,CAAA;MACD,GAAG,CAAC,SAAS,GAAG;UACd,IAAI,KAAK,CAAC,WAAW,EAAE;cACrB,KAAK,CAAC,WAAW,EAAE,CAAA;WACpB;OACF,CAAA;MACD,GAAG,CAAC,MAAM,GAAG;UACX,IAAI,KAAK,CAAC,eAAe,EAAE;kBACnB,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAA;cACnC,KAAK,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAA;WAClC;OACF,CAAA;MACD,GAAG,CAAC,OAAO,GAAG;UACZ,IAAI,KAAK,CAAC,eAAe,EAAE;cACzB,KAAK,CAAC,eAAe,EAAE,CAAA;WACxB;OACF,CAAA;MACD,GAAG,CAAC,OAAO,GAAG;UACZ,IAAI,KAAK,CAAC,cAAc,EAAE;cACxB,KAAK,CAAC,cAAc,EAAE,CAAA;WACvB;OACF,CAAA;MACD,GAAG,CAAC,UAAU,GAAG,UAAU,KAAK;UAC9B,IAAI,KAAK,CAAC,gBAAgB,EAAE;cAC1BD,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAA;cACvBA,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAA;cAC9CA,IAAM,OAAO,GAAG,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,KAAK,GAAG,CAAC,CAAA;mBAC3C,CAAC,gBAAgB,CAAC;4BACrB,QAAQ;yBACR,KAAK;2BACL,OAAO;eACR,CAAC,CAAA;WACH;OACF,CAAA;EAEH,EAAC;yBAED,0BAAO,OAA2B;aAEb,GAAG;UAAd;UAAK,oBAAa;WAErBC,IAAI,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;UAC9B,GAAG,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;OAChD;MAEDD,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAA;WAE1BC,IAAIC,KAAG,IAAI,OAAO,CAAC,IAAI,EAAE;UAC5B,QAAQ,CAAC,MAAM,CAACA,KAAG,EAAE,OAAO,CAAC,IAAI,CAACA,KAAG,CAAC,CAAC,CAAA;OACxC;cAEO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;MAEvC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;MAEtC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;EAEpB,CAAC;;;;;;;;;;;;;"}